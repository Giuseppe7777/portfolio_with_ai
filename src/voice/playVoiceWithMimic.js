
import * as THREE from 'three';
import { setTalking } from '../avatar/state';

/**
 * –ü—Ä–æ–≥—Ä–∞—î –æ–∑–≤—É—á–∫—É —Ç–µ–∫—Å—Ç—É —Ç–∞ –∞–Ω—ñ–º—É—î —Ä–æ—Ç —á–µ—Ä–µ–∑ –≥—É—á–Ω—ñ—Å—Ç—å –∞—É–¥—ñ–æ
 * @param {string} audioUrl - URL –¥–æ –∞—É–¥—ñ–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –≤—ñ–¥ ElevenLabs)
 * @param {THREE.Mesh} faceMesh - –º–µ—à —ñ–∑ morphTargetDictionary —Ç–∞ morphTargetInfluences
 * @param {THREE.Object3D} avatar - –ø–æ–≤–Ω–∞ –º–æ–¥–µ–ª—å, –∑ —è–∫–æ—ó –≤–∏—Ç—è–≥—É—î—Ç—å—Å—è —â–µ–ª–µ–ø–∞
 */
export async function playVoiceWithMimic(audioUrl, faceMesh, avatar) {
  const audio = new Audio(audioUrl);
  audio.preload = 'auto'; // ‚úÖ –≤–∞–∂–ª–∏–≤–æ
  audio.volume = 1.0;

  // üü£ Shape key
  const mouthOpenKey = 'A25_Jaw_Open';
  const dict = faceMesh.morphTargetDictionary;
  const infl = faceMesh.morphTargetInfluences;
  const mouthIndex = dict[mouthOpenKey];

  if (mouthIndex === undefined) {
    audio.play();
    return;
  }

  // ü¶¥ –©–µ–ª–µ–ø–Ω–∞ –∫—ñ—Å—Ç–∫–∞
  const jaw = avatar.getObjectByName('mixamorigJawRoot');
  if (!jaw) {
    audio.play();
    return;
  }

  // üìä –ê—É–¥—ñ–æ-–∞–Ω–∞–ª—ñ—Ç–∏–∫–∞
  const context = new AudioContext();
  const src = context.createMediaElementSource(audio);
  const analyser = context.createAnalyser();
  analyser.fftSize = 512;
  const dataArray = new Uint8Array(analyser.frequencyBinCount);

  src.connect(analyser);
  analyser.connect(context.destination);

  // üîÑ –ê–Ω—ñ–º–∞—Ü—ñ—è –º—ñ–º—ñ–∫–∏
  const baseJaw = Math.PI / 2;     // –ë–∞–∑–æ–≤–∏–π –∫—É—Ç –∑–∞–∫—Ä–∏—Ç–æ–≥–æ —Ä–æ—Ç–∞
  const jawAmplitude = 0.2;        // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –≤—ñ–¥–∫—Ä–∏–≤–∞–Ω–Ω—è —â–µ–ª–µ–ø–∏

  const animate = () => {
    analyser.getByteFrequencyData(dataArray);
    const volume = dataArray.reduce((a, b) => a + b, 0) / dataArray.length / 255;

    infl[mouthIndex] = volume * 3.7;

    jaw.rotation.x = baseJaw + volume * jawAmplitude;

    if (!audio.paused && !audio.ended) {
      requestAnimationFrame(animate);
    } else {
      infl[mouthIndex] = 0;
      jaw.rotation.x = baseJaw; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —É –∑–∞–∫—Ä–∏—Ç–∏–π —Å—Ç–∞–Ω
      setTalking(false); // üü¢ –∑–∞–≤–µ—Ä—à–∏–≤ –≥–æ–≤–æ—Ä–∏—Ç–∏
    }
  };

  // ‚ñ∂Ô∏è –ü—É—Å–∫
  setTalking(true); 

  audio.play().then(() => {
    context.resume();
    animate();

}).catch(err => {
    console.error('üéµ –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ–≥—Ä–∞—Ç–∏ –∞—É–¥—ñ–æ:', err);
    setTalking(false);
  });
}
