/**
 * –ü–æ–∫–∞–∑—É—î –∫–Ω–æ–ø–∫—É –¥–ª—è –¥–æ–∑–≤–æ–ª—É –Ω–∞ –º—ñ–∫—Ä–æ—Ñ–æ–Ω —ñ –ø–æ—á–∏–Ω–∞—î —Å–ª—É—Ö–∞—Ç–∏, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≥–æ–¥–∏–≤—Å—è
 */
export function promptMicrophoneAccess() {
  const micBtn = document.createElement('button');
  micBtn.textContent = 'üé§ Allow microphone';
  micBtn.id = 'mic-permission-btn';

  // –°—Ç–∏–ª—ñ ‚Äî –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –≥–∞—Ä–Ω–∏–π –≤–∏–≥–ª—è–¥
  Object.assign(micBtn.style, {
    position: 'absolute',
    bottom: '70px',
    left: '50%',
    transform: 'translateX(-50%)',
    padding: '12px 20px',
    fontSize: '18px',
    background: '#111',
    color: 'white',
    border: '2px solid white',
    borderRadius: '10px',
    cursor: 'pointer',
    zIndex: 9999
  });

  document.body.appendChild(micBtn);

  micBtn.addEventListener('click', async () => {
    try {
      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });

      console.log('üé§ –î–æ—Å—Ç—É–ø –¥–æ –º—ñ–∫—Ä–æ—Ñ–æ–Ω–∞ –Ω–∞–¥–∞–Ω–æ');
      micBtn.remove(); // –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–Ω–æ–ø–∫—É –ø—ñ—Å–ª—è –¥–æ–∑–≤–æ–ª—É

      listenToSpeech(stream); // ‚è≥ –î–∞–ª—ñ: —Å–ª—É—Ö–∞—î–º–æ –≥–æ–ª–æ—Å (—Ä–µ–∞–ª—ñ–∑—É—î–º–æ –æ–∫—Ä–µ–º–æ)
    } catch (err) {
      console.error('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –¥–æ –º—ñ–∫—Ä–æ—Ñ–æ–Ω–∞:', err);
      alert('–ú—ñ–∫—Ä–æ—Ñ–æ–Ω –Ω–µ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ. –Ø –Ω–µ –∑–º–æ–∂—É —Ç–µ–±–µ –ø–æ—á—É—Ç–∏ üò¢');
    }
  });
}

/**
 * –ü–æ–∫–∏ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –ª–æ–≥ ‚Äî —Ç—É—Ç –±—É–¥–µ –ø–æ–≤–Ω–∞ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–≤–Ω–æ–≥–æ —Ä–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è
 */
function listenToSpeech(stream) {
  console.log('üß† –ü–æ—á–∏–Ω–∞—î–º–æ —Å–ª—É—Ö–∞—Ç–∏ –≥–æ–ª–æ—Å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞‚Ä¶ (—Ü–µ –±—É–¥–µ —Ä–µ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –∫—Ä–æ—Ü—ñ)');
}
