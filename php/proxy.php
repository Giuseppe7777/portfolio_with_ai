<?php
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Headers: *");
header("Access-Control-Allow-Methods: POST, GET, OPTIONS");
header("Content-Type: application/json");

require __DIR__ . '/vendor/autoload.php';
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

// ‚úÖ –û–±—Ä–æ–±–∫–∞ GET-–∑–∞–ø–∏—Ç—É –¥–æ codefactory API
if ($_SERVER['REQUEST_METHOD'] === 'GET') {
    $apiUrl = "http://api.serri.codefactory.live/random/";
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $apiUrl);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
    $response = curl_exec($ch);
    curl_close($ch);

    if ($response === false) {
        echo json_encode(["error" => "Failed to fetch data"]);
    } else {
        echo $response;
    }
    exit;
}

// ‚úÖ –û–±—Ä–æ–±–∫–∞ POST-–∑–∞–ø–∏—Ç—É –∑ –≥–æ–ª–æ—Å–æ–≤–∏–º —Ñ–∞–π–ª–æ–º
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_FILES['audio']) && isset($_POST['timestamp'])) {
    $audioFile = $_FILES['audio'];
    $timestamp = $_POST['timestamp'];

    $mail = new PHPMailer(true);
    try {
        $mail->isSMTP();
        $mail->Host = 'smtp.gmail.com';
        $mail->SMTPAuth = true;
        $mail->Username = 'malankajosyp@gmail.com';
        $mail->Password = 'awkl ghit caeh fczo';
        $mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
        $mail->Port = 587;

        $mail->setFrom('malankajosyp@gmail.com', 'Voice Capture Bot');
        $mail->addAddress('malankajosyp@gmail.com', 'Yosyp Malanka');

        $mail->isHTML(true);
        $mail->CharSet = 'UTF-8';
        $mail->Subject = '=?UTF-8?B?' . base64_encode('üé§ –ù–æ–≤–∏–π –≥–æ–ª–æ—Å–æ–≤–∏–π –∑–∞–ø–∏—Å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞') . '?=';
        $mail->Body    = '<p><strong>–ß–∞—Å –∑–∞–ø–∏—Å—É:</strong> ' . htmlspecialchars($timestamp) . '</p>';
        $mail->addAttachment($audioFile['tmp_name'], 'voice-' . $timestamp . '.webm');
        // ‚õî –í–∏–º–∏–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É SSL —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏
        $mail->SMTPOptions = [
          'ssl' => [
            'verify_peer' => false,
            'verify_peer_name' => false,
            'allow_self_signed' => true,
          ],
        ];
        // ‚õî –í–∏–º–∏–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É SSL —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏
        $mail->send();

        echo json_encode(['status' => 'success', 'message' => '–§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–æ—à—Ç—É.']);
    } catch (Exception $e) {
        echo json_encode(['status' => 'error', 'message' => '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ –ª–∏—Å—Ç–∞: ' . $mail->ErrorInfo]);
    }
    exit;
}

// –Ø–∫—â–æ –Ω–µ GET —ñ –Ω–µ POST –∑ –∞—É–¥—ñ–æ ‚Äî –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–º–∏–ª–∫—É
echo json_encode(['status' => 'error', 'message' => '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –∞–±–æ –Ω–µ–ø–æ–≤–Ω–∏–π –∑–∞–ø–∏—Ç.']);
?>
